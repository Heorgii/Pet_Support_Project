{"version":3,"file":"static/js/594.33ff3039.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { baseColor } from 'components/baseStyles/Variables.styled';\n// import MaskedInput from 'react-text-mask';\n\nimport mobileBackground from '../../images/register/bg-register-mobile.png';\nimport tabletBackground from '../../images/register/bg-register-tablet.png';\nimport desktopBackground from '../../images/register/bg-register-desktop.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  @media(min-width: 767px) and (max-width: 1279px) {\n    padding-top: 168px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 44px;\n  }\n`;\nexport const Title = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const FormRegister = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: ${baseColor.colors.white};\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 15px;\n  top: 50%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n// export const Icon = styled(Icon)`\n//   display: inline-block;\n//   position: absolute;\n//   width: 20px;\n//   height: 20px;\n//   right: 15px;\n//   top: 50%;\n//   transform: translateY(-80%);\n//   color: grey;\n//   cursor: pointer;\n//   svg {\n//     width: inherit;\n//     height: inherit;\n//   }\n// `;\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${baseColor.colors.mainBg};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    border-color: ${baseColor.colors.orange};\n    outline: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled.div`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: ${baseColor.colors.mainBg};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    border-color: ${baseColor.colors.orange};\n    outline: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: ${baseColor.colors.white};\n  background: ${baseColor.colors.orangeLight};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${baseColor.colors.orangeLight};\n    transition: all 450ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: ${baseColor.colors.white};\n  border: 1px solid ${baseColor.colors.orangeLight};\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${baseColor.colors.orangeLight};\n    transition: all 450ms;\n  }\n  @media screen and (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: #e53e3e;\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  @media screen and (min-width: 768px) {\n    left: 32px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  color: ${baseColor.colors.blue};\n  margin-left: 4px;\n  :hover,\n  :focus {\n    color: ${baseColor.colors.orangeLight};\n  }\n`;\nexport const BoxText = styled.div`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: rgba(17, 17, 17, 0.6);\n`;\n\nexport const Background = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: -100;\n  background-image: url(${mobileBackground});\n  background-position: center bottom;\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: 100vh;\n  @media screen and (min-width: 768px) {\n    background-image: url(${tabletBackground});\n  }\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopBackground});\n  }\n`;\n\nexport const SpinerWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux'; //useSelector\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\nimport schemas from 'components/Schemas/schemas';\nimport { register } from 'redux/auth/operations';\nimport {\n  FormRegister,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  BackButton,\n  // PhoneInput,\n  ShowPassword,\n  // Icon,\n  StyledLink,\n  BoxText,\n  Background,\n  // SpinerWrapper,\n} from './RegisterForm.styled';\nimport usePlacesAutocomplete from 'use-places-autocomplete';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport { Li } from 'components/NoticesComp/AddNoticeButton/AddNoticeModal/AddNoticeModal.styled';\n\nconst RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ values, action }) => {\n    console.log('!!!!!!: ', values);\n    const { name: userName, email, password, phone, location } = values;\n    dispatch(\n      register({\n        userName,\n        email,\n        password,\n        phone,\n        location,\n      }),\n      // hideForm(),\n    );\n  };\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      location: '',\n    },\n    validationSchema: schemas.registerSchema,\n    onSubmit: (values, action) => {\n      console.log('form values: ', values);\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n  const {\n    ready,\n    suggestions: { data, status },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {},\n    debounce: 300,\n  });\n\n  const ref = useOnclickOutside(() => {\n    clearSuggestions();\n  });\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const renderSuggestions = setFieldValue =>\n    data.map(suggestion => {\n      const {\n        place_id,\n        structured_formatting: { main_text, secondary_text },\n      } = suggestion;\n\n      return (\n        <Li\n          key={place_id}\n          onClick={() => {\n            setFieldValue('location', suggestion.description);\n            clearSuggestions();\n          }}\n        >\n          {main_text}\n          {', '}\n          {secondary_text}\n        </Li>\n      );\n    });\n\n  return (\n    <>\n      {/* {loading ? (\n        <SpinerWrapper>\n          {/* <Spinner /> */}\n      {/* </SpinerWrapper> */}\n      {/* ) : (  */}\n      <FormContainer>\n        <Formik validationSchema={schemas.registerSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            {' '}\n            {/* formik. */}\n            <Title>Register</Title>\n            {isShown && (\n              <>\n                <div>\n                  <Input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    validate={schemas.registerSchema.email}\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                    onBlur={formik.handleBlur}\n                  />\n                  <div>\n                    {/* <Icon> */}\n                    <input\n                      type=\"text\"\n                      value={formik.values.email}\n                      validate={schemas.registerSchema.email}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                    />\n                    {isValid ? (\n                      <FaCheck color=\"green\" />\n                    ) : (\n                      <FaTimes color=\"red\" />\n                    )}\n                    {formik.errors.email && formik.touched.email ? (\n                      <ErrBox>{formik.errors.email}</ErrBox>\n                    ) : null}\n                    {/* </Icon> */}\n                  </div>\n                  {formik.errors.email || formik.touched.email ? (\n                    <ErrBox>{formik.errors.email}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {isShown && (\n              <>\n                <div>\n                  <Input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                    onBlur={formik.handleBlur}\n                  />\n\n                  <ShowPassword onClick={showPassword}>\n                    {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                  </ShowPassword>\n                  {formik.errors.password && formik.touched.password ? (\n                    <ErrBox>{formik.errors.password}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {isShown && (\n              <>\n                <div>\n                  <Input\n                    name=\"confirmPassword\"\n                    type={showConfirmPass ? 'text' : 'password'}\n                    placeholder=\"Confirm Password\"\n                    onChange={formik.handleChange}\n                    value={formik.values.confirmPassword}\n                    onBlur={formik.handleBlur}\n                  />\n                  <ShowPassword onClick={showConfirmPassword}>\n                    {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                  </ShowPassword>\n                  {formik.errors.confirmPassword &&\n                  formik.touched.confirmPassword ? (\n                    <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {isShown && (\n              <Button type=\"button\" onClick={showForm} disabled={isValid}>\n                Next\n              </Button>\n            )}\n            {!isShown && (\n              <>\n                <div>\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    onChange={formik.handleChange}\n                    value={formik.values.name}\n                    onBlur={formik.handleBlur}\n                  />\n\n                  {formik.errors.name && formik.touched.name ? (\n                    <ErrBox>{formik.errors.name}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {!isShown && (\n              <>\n                <div ref={ref}>\n                  <Input\n                    name=\"location\"\n                    type=\"text\"\n                    placeholder=\"Location, region\"\n                    value={formik.values.location}\n                    onBlur={formik.handleBlur}\n                    disabled={!ready}\n                    onChange={e => {\n                      formik.handleChange(e);\n                      handleInput(e);\n                    }}\n                  />\n                  {status === 'OK' && (\n                    <ul>{renderSuggestions(formik.setFieldValue)}</ul>\n                  )}\n\n                  {formik.errors.location && formik.touched.location ? (\n                    <ErrBox>{formik.errors.location}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {!isShown && (\n              <>\n                <div>\n                  <Input\n                    // mask={phoneNumberMask}\n                    id=\"phone\"\n                    type=\"phone\"\n                    placeholder=\"Mobile phone\"\n                    onChange={formik.handleChange}\n                    value={formik.values.phone}\n                    onBlur={formik.handleBlur}\n                    name=\"phone\"\n                  />\n\n                  {formik.errors.phone && formik.touched.phone ? (\n                    <ErrBox>{formik.errors.phone}</ErrBox>\n                  ) : null}\n                </div>\n              </>\n            )}\n            {!isShown && <Button type=\"submit\">Register</Button>}\n            {!isShown && (\n              <BackButton type=\"button\" onClick={hideForm}>\n                Back\n              </BackButton>\n            )}\n            <BoxText>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/login\">Login</StyledLink>\n            </BoxText>\n          </FormRegister>\n        </Formik>\n        <Background></Background>\n      </FormContainer>\n      {/*  )} */}\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/RegisterForm\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Register = () => {\n    return (\n        <div>\n            <Helmet>\n                <title>Register</title>\n            </Helmet>\n            <RegisterForm />\n        </div>\n    );\n}\n\nexport default Register;\n"],"names":["FormContainer","styled","Title","FormRegister","Form","baseColor","ShowPassword","Input","Field","Button","BackButton","ErrBox","StyledLink","Link","BoxText","Background","mobileBackground","tabletBackground","desktopBackground","setFieldValue","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","confirmPassword","phone","location","validationSchema","schemas","onSubmit","values","action","console","log","userName","register","isValid","errors","touched","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","data","status","setValue","clearSuggestions","ref","useOnclickOutside","handleSubmit","autoComplete","type","placeholder","validate","onChange","handleChange","value","onBlur","handleBlur","color","onClick","disabled","e","target","handleInput","map","suggestion","place_id","structured_formatting","main_text","secondary_text","Li","description","id","to"],"sourceRoot":""}