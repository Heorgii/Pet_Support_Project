{"version":3,"file":"static/js/896.2c0651e6.chunk.js","mappings":"uQACYA,EAAWC,EAAQ,OAAvBC,GCAR,EAA4B,gCAA5B,EAA2E,mCAA3E,EAAkM,sCAAlM,EAA0P,sCAA1P,EAAoT,wCAApT,EAAsW,8BAAtW,EAAmZ,mCAAnZ,EAAoc,kC,WCiHpc,MA3GA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,YAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAoCN,EAAAA,EAAAA,UAAS,IAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KAYMC,EAAiB,SAAAC,GAKrBR,EAJqB,aAAjBD,EAIY,WAHE,OAInB,EAeD,OACE,+BACE,iBAAMU,UAAWC,EAAuBC,SAfvB,SAAAH,GACnBA,EAAEI,iBACF,IF/B2BC,EE+BrBC,EAAON,EAAEO,cACfnB,GFhC2BiB,EEiCV,CACbG,SAAUF,EAAKG,SAASC,KAAKC,MAC7BC,MAAON,EAAKG,SAASG,MAAMD,MAC3BE,SAAUP,EAAKG,SAASI,SAASF,OFpCX,mCAAgB,WAAOvB,EAAU0B,GAAjB,2FAEpCC,EAAS9B,IACPuB,EAAoBH,EAApBG,SAAUI,EAAUP,EAAVO,MAHwB,SAMpCxB,EACJ4B,EAAAA,EAAAA,QAAAA,kBAAoC,CAClCD,OAAAA,EACAP,SAAAA,EACAI,MAAAA,EACAK,iBAPoB,EAQpBC,cAPiB,KALqB,uDAgB1CC,QAAQC,IAAI,QAAZ,MACAC,MAAM,oGAAqB,KAAMC,SAjBS,yDAAhB,0DEuC1BhB,EAAKiB,OACN,EAIG,UACE,iBAAKtB,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,sBACA,gBAAKD,UAAWC,EAAhB,UACE,kBAAOD,UAAWC,EAAlB,UACE,wCAEE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,MAAD,CAAQsB,KAAK,QACb,kBACEvB,UAAWC,EACXQ,KAAK,OACLe,KAAK,OACLC,SA3CO,SAAAC,GACvB/B,EAAa+B,EAAKC,OAAOjB,MAC1B,EA0CiBA,MAAOhB,eAMjB,gBAAKM,UAAWC,EAAhB,UACE,kBAAOD,UAAWC,EAAlB,UACE,yCAEE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,MAAD,CAAYsB,KAAK,QACjB,kBACEvB,UAAWC,EACXQ,KAAK,QACLe,KAAK,QACLC,SAzDQ,SAAAC,GACxB7B,EAAc6B,EAAKC,OAAOjB,MAC3B,EAwDiBA,MAAOd,eAMjB,gBAAKI,UAAWC,EAAhB,UACE,kBAAOD,UAAWC,EAAlB,UACE,uCAEE,iBAAKD,UAAWC,EAAhB,UACoB,aAAjBX,GACC,SAAC,MAAD,CAAQiC,KAAK,KAAKK,QAAS9B,KAE3B,SAAC,MAAD,CAAayB,KAAK,KAAKK,QAAS9B,KAElC,kBACEE,UAAWC,EACXQ,KAAK,WACLe,KAAMlC,EACNmC,SApFW,SAAAC,GAC3BjC,EAAiBiC,EAAKC,OAAOjB,MAC9B,EAmFiBA,MAAOlB,eAMjB,mBAAQgC,KAAK,SAASxB,UAAWC,EAAjC,2BAOT,E,UClGD,EAXiB,WACb,OACI,4BACI,SAAC,KAAD,WACI,2CAEJ,SAAC4B,EAAD,MAGX,C","sources":["redux/auth/operations.js","webpack://pet-support-project/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { authSlice } from \"./slice\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\nexport const authSignUpUser = (userSignIn) => async (dispatch, getState) => {\n  try {\n    const userId = uuidv4();\n    const { nickName, email } = userSignIn;\n    const stateIsLoggedIn = true;\n    const isRefreshing = true;\n    await dispatch(\n      authSlice.actions.updateUserProfile({\n        userId,\n        nickName,\n        email,\n        stateIsLoggedIn,\n        isRefreshing,\n      })\n    );\n  } catch (error) {\n    console.log(\"error\", error);\n    alert(\"Помилка реєстрції\", error.message);\n  }\n};\n\nexport const logIn = (userSignIn) => async (dispatch, getState) => {\n  try {\n    const userId = uuidv4();\n    const { nickName, email } = userSignIn;\n    const stateIsLoggedIn = true;\n    const isRefreshing = true;\n    await dispatch(\n      authSlice.actions.updateUserProfile({\n        userId,\n        nickName,\n        email,\n        stateIsLoggedIn,\n        isRefreshing,\n      })\n    );\n  } catch (error) {\n    console.log(\"error\", error);\n    alert(\"Помилка\", error.message);\n  }\n};\n\nexport const logOut = async (dispatch, getState) => {\n  try {\n    await dispatch(authSlice.actions.authSignOut());\n  } catch (error) {\n    console.log(\"error\", error);\n    alert(\"Помилка\", error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"RegisterForm_formTitle__YlpKI\",\"title__label\":\"RegisterForm_title__label__sZmtM\",\"title__labelforCheck\":\"RegisterForm_title__labelforCheck__54iqI\",\"item__container\":\"RegisterForm_item__container__ngCAN\",\"form__container\":\"RegisterForm_form__container__es-rW\",\"signIn__Container\":\"RegisterForm_signIn__Container__mIOT2\",\"flexrow\":\"RegisterForm_flexrow__2GRSs\",\"input_active\":\"RegisterForm_input_active__iDcN1\",\"form_submit\":\"RegisterForm_form_submit__QRMlS\"};","import React, { useState } from 'react';\nimport { FaUser, FaEnvelope, FaLock, FaUnlockAlt } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { authSignUpUser } from 'redux/auth/operations';\n\nimport css from './RegisterForm.module.css';\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const [passwordType, setPasswordType] = useState('password');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n\n  const handlePasswordChange = evnt => {\n    setPasswordInput(evnt.target.value);\n  };\n  const handleNameChange = evnt => {\n    setNameInput(evnt.target.value);\n  };\n  const handleEmailChange = evnt => {\n    setEmailInput(evnt.target.value);\n  };\n\n  const togglePassword = e => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      authSignUpUser({\n        nickName: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      }),\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n      <form className={css.signIn__Container} onSubmit={handleSubmit}>\n        <div className={css.form__container}>\n          <p className={css.formTitle}>Sign up</p>\n          <div className={css.flexrow}>\n            <label className={css.title__label}>\n              <div>\n                Your Name\n                <div className={css.item__container}>\n                  <FaUser size=\"25\" />\n                  <input\n                    className={css.input_active}\n                    name=\"name\"\n                    type=\"text\"\n                    onChange={handleNameChange}\n                    value={nameInput}\n                  />\n                </div>\n              </div>\n            </label>\n          </div>\n          <div className={css.flexrow}>\n            <label className={css.title__label}>\n              <div>\n                Your Email\n                <div className={css.item__container}>\n                  <FaEnvelope size=\"25\" />\n                  <input\n                    className={css.input_active}\n                    name=\"email\"\n                    type=\"email\"\n                    onChange={handleEmailChange}\n                    value={emailInput}\n                  />\n                </div>\n              </div>\n            </label>\n          </div>\n          <div className={css.flexrow}>\n            <label className={css.title__label}>\n              <div>\n                Password\n                <div className={css.item__container}>\n                  {passwordType === 'password' ? (\n                    <FaLock size=\"25\" onClick={togglePassword} />\n                  ) : (\n                    <FaUnlockAlt size=\"25\" onClick={togglePassword} />\n                  )}\n                  <input\n                    className={css.input_active}\n                    name=\"password\"\n                    type={passwordType}\n                    onChange={handlePasswordChange}\n                    value={passwordInput}\n                  />\n                </div>\n              </div>\n            </label>\n          </div>\n          <button type=\"submit\" className={css.form_submit}>\n            Sign up\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Register;\n","import RegisterForm from \"components/RegisterForm/RegisterForm\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Register = () => {\n    return (\n        <div>\n            <Helmet>\n                <title>Register</title>\n            </Helmet>\n            <RegisterForm />\n        </div>\n    );\n}\n\nexport default Register;"],"names":["uuidv4","require","v4","dispatch","useDispatch","useState","passwordType","setPasswordType","passwordInput","setPasswordInput","nameInput","setNameInput","emailInput","setEmailInput","togglePassword","e","className","css","onSubmit","preventDefault","userSignIn","form","currentTarget","nickName","elements","name","value","email","password","getState","userId","authSlice","stateIsLoggedIn","isRefreshing","console","log","alert","message","reset","size","type","onChange","evnt","target","onClick","RegisterForm"],"sourceRoot":""}