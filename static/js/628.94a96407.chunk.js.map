{"version":3,"file":"static/js/628.94a96407.chunk.js","mappings":"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","sources":["components/Schemas/schemas.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","utils/SEO.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.string()\n    .matches(/^\\+380\\d{9}$/, 'Invalid number. valid +38(0xx) xxx-xx-xx')\n    .required('Require field'),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst noticeSchemaFirst = Yup.object().shape({\n  category: Yup.string().required('Categori is Required!'),\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(48, 'Too Long!')\n    .required('Title is Required!'),\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n  birthday: Yup.date().required('BirthDay is Required!'),\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(34, 'Too Long!')\n    .required('Breed is Required!'),\n});\nconst noticeSchemaSecond = Yup.object().shape({\n  sex: Yup.string().required('Sex is Required!'),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Location is Required!'),\n  imageUrl: Yup.string().required('Image is Required!'),\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n  Yup.object().shape({\n    price: Yup.number()\n      .moreThan('0')\n      .positive()\n      .integer()\n      .required('Price is Required!'),\n  }),\n);\n\nconst addPetsUser = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n\n  data: Yup.date().required('BirthDay is Required!'),\n\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(34, 'Too Long!')\n    .required('Breed is Required!'),\n\n  // imageUrl: Yup.mixed().required('Photo is Required!'),\n\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  noticeSchemaFirst,\n  noticeSchemaSecond,\n  noticeSchemaSecondPrice,\n  addPetsUser,\n};\n\nexport default schemas;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { baseColor } from 'components/baseStyles/Variables.styled';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\n\n// import mobileBackground from '../../images/register/bg-register-mobile.png';\n// import tabletBackground from '../../images/register/bg-register-tablet.png';\n// import desktopBackground from '../../images/register/bg-register-desktop.png';\nimport BackgroundImage from 'images/register/bgForm.png';\nimport waveMobile from 'images/hero/waveMobileFull.png';\nimport waveTab from 'images/register/BGFornTab.png';\n\nconst FormSection = styled.section`\n  height: 100%;\n\n  @media screen and (max-width: 767.9px) {\n    min-height: 540px;\n    background-image: url(${waveMobile});\n    background-repeat: no-repeat;\n    background-size: 620px auto;\n    background-position: bottom -250px left 30%;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279.9px) {\n    min-height: 720px;\n    background: url(${waveTab});\n    background-repeat: no-repeat;\n    background-size: 1396px auto;\n    background-position: bottom -130px left 50%;\n  }\n`;\n\nconst FormContainer = styled.div`\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    padding-top: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 80px;\n\n    min-height: 700px;\n    background: url(${BackgroundImage});\n    background-repeat: no-repeat;\n    background-size: 1280px auto;\n    background-position: bottom 0 left 50%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst FormLogin = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    height: 492px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: ${baseColor.colors.white};\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nconst ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 6%;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nconst Input = styled.input`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${baseColor.colors.mainBg};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  // margin-bottom: 16px;\n  transition: all 0.25s ease-in;\n  &:focus,\n  &:hover {\n    border-color: ${baseColor.colors.orange};\n    outline: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nconst Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: ${baseColor.colors.white};\n  background: ${baseColor.colors.orangeLight};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 8px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${baseColor.colors.orangeLight};\n    transition: all 450ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nconst ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: #e53e3e;\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  margin-bottom: -16px;\n  @media screen and (min-width: 768px) {\n    left: 32px;\n  }\n`;\n\nconst Div = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${baseColor.colors.blue};\n  margin-left: 4px;\n  transition: all 0.25s ease-in;\n  :hover,\n  :focus {\n    color: ${baseColor.colors.orangeLight};\n  }\n`;\nconst BoxText = styled.div`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n`;\n// const Background = styled.div`\n//   position: absolute;\n//   top: 0;\n//   bottom: 0;\n//   left: 0;\n//   right: 0;\n//   z-index: -100;\n//   background-image: url(${mobileBackground});\n//   background-position: center bottom;\n//   background-size: contain;\n//   background-repeat: no-repeat;\n//   height: 100vh;\n//   @media screen and (min-width: 768px) {\n//     background-image: url(${tabletBackground});\n//   }\n//   @media screen and (min-width: 1280px) {\n//     background-image: url(${desktopBackground});\n//   }\n// `;\n\nexport {\n  FormSection,\n  FormContainer,\n  Title,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Button,\n  StyledLink,\n  BoxText,\n  // Background,\n  ErrorBox,\n  Div,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux'; //useSelector\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'components/Schemas/schemas';\nimport { baseColor } from 'components/baseStyles/Variables.styled';\n\nimport {\n  FormSection,\n  FormContainer,\n  Title,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Button,\n  StyledLink,\n  BoxText,\n  // Background,\n  IconValid,\n  IconInValid,\n  ErrorBox,\n  Div,\n} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const [isShown, setIsShown] = useState(true); //\n  const [showPass, setShowPass] = useState(false);\n  const dispatch = useDispatch();\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      }),\n      hideForm(),\n    );\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue ? null : isValide ? '#E2001A' : '#3CBC81';\n  };\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <Title>Login</Title>\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  validate={schemas.schemasLogin.email}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={baseColor.colors.success} />\n                ) : (\n                  <IconInValid color={baseColor.colors.error} />\n                )}\n                {formik.errors.email || formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n              </Div>\n            )}\n\n            {isShown && (\n              <Div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n              </Div>\n            )}\n\n            {isShown && (\n              <Button type=\"submit\" disabled={isValid}>\n                Login\n              </Button>\n            )}\n\n            {!isShown && <Button type=\"submit\">Login</Button>}\n            <BoxText>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/register\">Register</StyledLink>\n            </BoxText>\n          </FormLogin>\n        </Formik>\n        {/* <Background></Background> */}\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default LoginForm;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { SEO } from 'utils/SEO';\n\nconst Login = () => {\n  return (\n    <>\n      <SEO title=\"Log in\" description=\"Log in to your account\" />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\nexport function SEO({ title, description }) {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n  );\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n"],"names":["registerSchema","Yup","shape","email","matches","required","password","min","max","confirmPassword","oneOf","name","phone","location","schemasLogin","noticeSchemaFirst","category","title","birthday","breed","noticeSchemaSecond","sex","imageUrl","comments","noticeSchemaSecondPrice","concat","price","moreThan","positive","integer","schemas","addPetsUser","data","FormSection","styled","waveMobile","waveTab","FormContainer","BackgroundImage","Title","IconValid","FaCheck","IconInValid","FaTimes","FormLogin","Form","baseColor","ShowPassword","Input","Button","ErrorBox","Div","StyledLink","Link","BoxText","LoginForm","useState","isShown","setIsShown","showPass","setShowPass","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","handleSubmit","autoComplete","style","borderColor","type","placeholder","validate","onChange","handleChange","value","onBlur","handleBlur","color","onClick","disabled","to","SEO","description","content"],"sourceRoot":""}