{"version":3,"file":"static/js/628.e0f81673.chunk.js","mappings":"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","sources":["components/Schemas/schemas.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import * as Yup from 'yup';\n// import { object, string } from 'yup';\n\nconst registerSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require field'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require field'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], 'Password must match')\n    .required('Require field'),\n  name: Yup.string()\n    .matches(/\\S{2,}/, 'Name too short (min 2)')\n    .matches(\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\n      'Name must includes only Latin alphabet',\n    )\n    .required('Require field'),\n  phone: Yup.string()\n    .matches(/^\\+380\\d{9}$/, 'Invalid number. valid +38(0xx) xxx-xx-xx')\n    .required('Require field'),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Require field'),\n});\n\nconst schemasLogin = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^\\s*\\S+\\s*$/, 'Email must be without spaces')\n    .matches(/\\S{7,}/, 'Email too short (min 7 symbols)')\n    .matches(\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\n      'Invalid email',\n    )\n    .matches(\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\n      'Dashes should only be inside email',\n    )\n    .required('Require'),\n  password: Yup.string()\n    .min(7, 'Password too short (min 7)')\n    .max(32, 'Password too long (max 32)')\n    .matches(/^\\s*\\S+\\s*$/, 'Password must be without spaces')\n    .required('Require'),\n});\n\nconst noticeSchemaFirst = Yup.object().shape({\n  category: Yup.string().required('Categori is Required!'),\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(48, 'Too Long!')\n    .required('Title is Required!'),\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n  birthday: Yup.date().required('BirthDay is Required!'),\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(34, 'Too Long!')\n    .required('Breed is Required!'),\n});\nconst noticeSchemaSecond = Yup.object().shape({\n  sex: Yup.string().required('Sex is Required!'),\n  location: Yup.string()\n    .matches(\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\n      'Invalid format. Example: Brovary, Kyiv ...',\n    )\n    .required('Location is Required!'),\n  imageUrl: Yup.string().required('Image is Required!'),\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst noticeSchemaSecondPrice = noticeSchemaSecond.concat(\n  Yup.object().shape({\n    price: Yup.number()\n      .moreThan('0')\n      .positive()\n      .integer()\n      .required('Price is Required!'),\n  }),\n);\n\nconst addPetsUser = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Name is Required!'),\n\n  birthday: Yup.date().required('BirthDay is Required!'),\n\n  breed: Yup.string()\n    .min(2, 'Too Short!')\n    .max(16, 'Too Long!')\n    .required('Breed is Required!'),\n\n  imageUrl: Yup.mixed(),\n\n  comments: Yup.string()\n    .min(8, 'Too Short!')\n    .max(120, 'Too Long!')\n    .required('Comments are Required!'),\n});\n\nconst schemas = {\n  registerSchema,\n  schemasLogin,\n  noticeSchemaFirst,\n  noticeSchemaSecond,\n  noticeSchemaSecondPrice,\n  addPetsUser,\n};\n\nexport default schemas;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { baseColor } from 'components/baseStyles/Variables.styled';\nimport { FaCheck, FaTimes } from 'react-icons/fa';\n\nimport mobileBackground from '../../images/register/bg-register-mobile.png';\nimport tabletBackground from '../../images/register/bg-register-tablet.png';\nimport desktopBackground from '../../images/register/bg-register-desktop.png';\n\nconst FormContainer = styled.div`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding-top: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 50px;\n  }\n`;\nconst Title = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const IconValid = styled(FaCheck)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 28px;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const IconInValid = styled(FaTimes)`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 28px;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nconst FormLogin = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    height: 492px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: ${baseColor.colors.white};\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\nconst ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 28px;\n  top: 62%;\n  transform: translateY(-80%);\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\nconst Input = styled.input`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: ${baseColor.colors.mainBg};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  // margin-bottom: 16px;\n\n  &:focus,\n  &:hover {\n    border-color: ${baseColor.colors.orange};\n    outline: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nconst Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: ${baseColor.colors.white};\n  background: ${baseColor.colors.orangeLight};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 8px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: ${baseColor.colors.orangeLight};\n    transition: all 450ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media screen and (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nconst ErrorBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: #e53e3e;\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-style: normal;\n  line-height: 1.4;\n  letter-spacing: 0.03em;\n  margin-bottom: -16px;\n  @media screen and (min-width: 768px) {\n    left: 32px;\n  }\n`;\n\nconst Div = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${baseColor.colors.blue};\n  margin-left: 4px;\n  :hover,\n  :focus {\n    color: ${baseColor.colors.orangeLight};\n  }\n`;\nconst BoxText = styled.div`\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: rgba(17, 17, 17, 0.6);\n`;\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: -100;\n  background-image: url(${mobileBackground});\n  background-position: center bottom;\n  background-size: contain;\n  background-repeat: no-repeat;\n  height: 100vh;\n  @media screen and (min-width: 768px) {\n    background-image: url(${tabletBackground});\n  }\n  @media screen and (min-width: 1280px) {\n    background-image: url(${desktopBackground});\n  }\n`;\n\nexport {\n  FormContainer,\n  Title,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Button,\n  StyledLink,\n  BoxText,\n  Background,\n  ErrorBox,\n  Div,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux'; //useSelector\nimport { useFormik, Formik } from 'formik';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport schemas from 'components/Schemas/schemas';\nimport { baseColor } from 'components/baseStyles/Variables.styled';\n\nimport {\n  FormContainer,\n  Title,\n  FormLogin,\n  ShowPassword,\n  Input,\n  Button,\n  StyledLink,\n  BoxText,\n  Background,\n  IconValid,\n  IconInValid,\n  ErrorBox,\n  Div,\n} from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const [isShown, setIsShown] = useState(true); //\n  const [showPass, setShowPass] = useState(false);\n  const dispatch = useDispatch();\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      }),\n      hideForm(),\n    );\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue ? null : isValide ? '#E2001A' : '#3CBC81';\n  };\n  return (\n    <>\n      <FormContainer>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <Title>Login</Title>\n            {isShown && (\n              <>\n                <Div>\n                  <Input\n                    style={{\n                      borderColor: showAccentValidateInput(\n                        formik.values.email,\n                        formik.errors.email,\n                      ),\n                    }}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    validate={schemas.schemasLogin.email}\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                    onBlur={formik.handleBlur}\n                  />\n                  {!formik.values.email ? null : !formik.errors.email ? (\n                    <IconValid color={baseColor.colors.success} />\n                  ) : (\n                    <IconInValid color={baseColor.colors.error} />\n                  )}\n                  {formik.errors.email || formik.touched.email ? (\n                    <ErrorBox>{formik.errors.email}</ErrorBox>\n                  ) : null}\n                </Div>\n              </>\n            )}\n\n            {isShown && (\n              <>\n                <Div>\n                  <Input\n                    style={{\n                      borderColor: showAccentValidateInput(\n                        formik.values.password,\n                        formik.errors.password,\n                      ),\n                    }}\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                    onBlur={formik.handleBlur}\n                  />\n\n                  <ShowPassword onClick={showPassword}>\n                    {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                  </ShowPassword>\n                  {formik.errors.password && formik.touched.password ? (\n                    <ErrorBox>{formik.errors.password}</ErrorBox>\n                  ) : null}\n                </Div>\n              </>\n            )}\n\n            {isShown && (\n              <Button type=\"submit\" disabled={isValid}>\n                Login\n              </Button>\n            )}\n\n            {!isShown && <Button type=\"submit\">Login</Button>}\n            <BoxText>\n              <span>Already have an account?</span>{' '}\n              <StyledLink to=\"/register\">Register</StyledLink>\n            </BoxText>\n          </FormLogin>\n        </Formik>\n        <Background></Background>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import { LoginForm } from \"components/LoginForm/LoginForm\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Login = () => {\n    return (\n        <div>\n            <Helmet>\n                <title>Log in</title>\n            </Helmet>\n            <LoginForm />\n        </div>\n    );\n}\n\nexport default Login;"],"names":["registerSchema","Yup","shape","email","matches","required","password","min","max","confirmPassword","oneOf","name","phone","location","schemasLogin","noticeSchemaFirst","category","title","birthday","breed","noticeSchemaSecond","sex","imageUrl","comments","noticeSchemaSecondPrice","concat","price","moreThan","positive","integer","schemas","addPetsUser","FormContainer","styled","Title","IconValid","FaCheck","IconInValid","FaTimes","FormLogin","Form","baseColor","ShowPassword","Input","Button","ErrorBox","Div","StyledLink","Link","BoxText","Background","mobileBackground","tabletBackground","desktopBackground","LoginForm","useState","isShown","setIsShown","showPass","setShowPass","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","handleSubmit","autoComplete","style","borderColor","type","placeholder","validate","onChange","handleChange","value","onBlur","handleBlur","color","onClick","disabled","to"],"sourceRoot":""}